Pre release:
- Add "owns_memory_" field to Matrix, Vector, to signify if data should be freed
- Generic "buffer" class that can be used to send Line3D, Triangles, etc.
- Verify that image is not mirrored
- Support no properties for C functions: https://stackoverflow.com/questions/5891221/variadic-macros-with-zero-arguments
- Rename HomogenousLine and ParametricLine to HLine and Pline?
- Change void drawPlaneXY etc. interfaces to match between languages (C implementation is correct)
- Rename Vec2D/3D/4D to Vec2/3/4
- Unify function names in interfaces, allow for different names between interfaces, e.g. C interface will probably have separate
  2D/3D functions
  - Default layout templates with simple names and ex 2x2 plots, 3x3 plots etc
- Refactor/clean up window/tabs/plot elements system
- Add "holdClear" that only clears when new data comes in, to avoid flashing
- Remove need to always specify num_elements
- Function "view" is the one that sets/creates the current element
  view("ViewName"), view("ViewName", "FigureName"), where FigureName can be "main" to indicate the main window
- Rename "linspaceFromPointsAndCount" to "linspaceEdgesAndCount" or "linspaceBoundariesAndCount"
- Set point size before rendering text (it gets affected by setting point size in a plot) (not relevant anymore I think)
- Remove "drawTriangle source file" (It uses drawTriangles)
- Check if "fillBuffer(&(data_blob[idx]), other_elements...);" can be used as "fillBuffer(&(data_blob[idx]), first_element, other_elements...);"
- Rename "FunctionHeader" to "Header" and "FunctionHeaderObject" to "HeaderObject"
- Add pan and zoom to scroll click and right click
- Delete gl buffers with "glDeleteBuffers"
- Change plot-LINE_STRIP to separate function, lineCollection or something like that
- Replace old c type arrays with std::array
- Characters turning away from plot box when rotating (possibly post release)
- Don''t zoom perpendicular axis if snapped
- Reducing number of axis numbers depending on rotation
- Zoom rectangle if snapped
- Making sure that view and axes are set properly when not explicitly setting them
  - Behaviour when plotting when no configuration is set
- Imshow 1 and 3 channels + arbitrary data type
- Fix layout designer
- Fix number formatting and grid vectors system

Post release:
- Create data structure to store properties in, instead of having to specify everything in function call to "plot" etc. i.e. "plot(x, y, props)"
- setCurrentElement doesn''t send any information to dvs, only sets internal variable on client side which is sent with the next command
  - This way, a property type could be added, so that the current element can be specified in the function call
- The class Properties should be moved so that it is not included in the C++ client interface.
- Create another class called something like HeaderPayload, that separates values (angle, axis bounds etc) from flags?
- More general plot interface with "templated templates": plot(const VectorType<T>& x, ...), where VectorType itself is a template
- Edge and Facecolor transparent
- Fix so that one can set axis square and axis equal
- Nice looking buttons in interface
- Ability to add button to gui
